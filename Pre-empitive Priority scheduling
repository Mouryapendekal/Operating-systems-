#include <stdio.h>

struct Process {
    int id;
    int burstTime;
    int priority;
    int waitingTime;
    int turnaroundTime;
    int remainingTime;
};

int main() {
    int numProcesses;

    printf("Enter the number of processes: ");
    scanf("%d", &numProcesses);

    struct Process processes[numProcesses];

    for (int i = 0; i < numProcesses; i++) {
        processes[i].id = i + 1;
        printf("Enter burst time for Process %d: ", processes[i].id);
        scanf("%d", &processes[i].burstTime);
        printf("Enter priority for Process %d: ", processes[i].id);
        scanf("%d", &processes[i].priority);
        processes[i].waitingTime = 0;
        processes[i].turnaroundTime = 0;
        processes[i].remainingTime = processes[i].burstTime;
    }

    int currentTime = 0;
    int completed = 0;

    while (completed < numProcesses) {
        int highestPriority = -1;
        int highestPriorityProcess = -1;

        for (int i = 0; i < numProcesses; i++) {
            if (processes[i].remainingTime > 0 && processes[i].priority > highestPriority && processes[i].burstTime > 0) {
                highestPriority = processes[i].priority;
                highestPriorityProcess = i;
            }
        }

        if (highestPriorityProcess == -1) {
            currentTime++;
        } else {
            processes[highestPriorityProcess].remainingTime--;
            currentTime++;
            if (processes[highestPriorityProcess].remainingTime == 0) {
                completed++;
                processes[highestPriorityProcess].turnaroundTime = currentTime;
                processes[highestPriorityProcess].waitingTime = currentTime - processes[highestPriorityProcess].burstTime;
            }
        }
    }

    printf("Process\tBurst Time\tPriority\tWaiting Time\tTurnaround Time\n");
    for (int i = 0; i < numProcesses; i++) {
        printf("%d\t%d\t\t%d\t\t%d\t\t%d\n", processes[i].id, processes[i].burstTime, processes[i].priority,
               processes[i].waitingTime, processes[i].turnaroundTime);
    }

    return 0;
}
